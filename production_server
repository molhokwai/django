#!/usr/bin/env bash
# -*- coding: utf8 -*-

# ----------
# SETUP STEPS
# w Deepseek, 62610720, and a few (2?) days prior
# ----------
# w https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu
# 
# ```
# sudo chown -R www-data:www-data /home/myprojectuser/myproject/static/
# sudo chmod -R 755 /home/myprojectuser/myproject/static/
# sudo chmod 755 /home/myprojectuser/
# sudo chmod 755 /home/myprojectuser/myproject/
# ```
#
# ----------
# This was a day(s) long process, finding the solution out in.
# The digitalocean tutorial helped, though not used past the 1st third, and no postgres...
# The above 4 commands comment made finding the final solution possible...  
# ----------




# --------------
#   I.  
# --------------

# ```
sudo chown -R root:www-data /root/webscraper/static/
sudo chown -R root:www-data /root/webscraper/staticfiles/
sudo chmod -R 755 /root/webscraper/static/
sudo chmod -R 755 /root/webscraper/staticfiles/
sudo chmod 755 /root/
sudo chmod 755 /root/webscraper/
# ```
# ----------



# --------------
#   II.  
# --------------

# Tailwind

# 1.
pip install 'django-tailwind[reload]'

# 2. 
# - comment 'theme', remove 'theme' folder
# - init
# - uncomment
python manage.py tailwind init

# 3. 
python manage.py tailwind install

# 4. 
python manage.py tailwind build

# ----------




# --------------
#   III.  
# --------------


# ------
# NGINX
# ------

echo '
server {
    listen 80;
    server_name 87.106.66.163;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /root/webscraper;
    }
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
' | sudo tee /etc/nginx/sites-available/webscraper

sudo ln -s /etc/nginx/sites-available/webscraper /etc/nginx/sites-enabled/
# --------------------------------------------------------------------------





# --------------
#   IV.  
# --------------

# ---------
# GUNICORN
# ---------

echo '
[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=root
Group=root
WorkingDirectory=/root/webscraper
ExecStart=/root/webscraper/venv/bin/gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &

[Install]
WantedBy=multi-user.target
' | sudo tee /etc/systemd/system/gunicorn.service


# django_app.sock ?
# --------------------------------------------
# ExecStart=/root/webscraper/venv/bin/gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info  --bind unix:/root/webscraper/django_app.sock  django_app.wsgi:application
# --------------------------------------------




# --------------
#   V.  
# --------------


# ------------------
# ./cp_staticfiles_to_static
# ------------------

# ------------------
# cd to project root folder
# ------------------
folders=(
    "/root/webscraper/"
    "/home/amylovesdaisys/django_app/"
    "/home/nkensa/GDrive-local/Tree/Workspaces/dev/frameworks/django/projects/django/"
)

for folder in "${folders[@]}"; do
    if [ -d "$folder" ]; then
        echo "cd $folder..."
        cd "$folder"
    fi
done


cp -r staticfiles/fontawesomefree/ static/
cp -r staticfiles/unicorn/ static/
cp -r staticfiles/unpkg.com/ static/
cp -r staticfiles/admin/ static/


mkdir static/css/
mkdir static/css/dist/
cp staticfiles/css/dist/styles.css static/css/dist/styles.css





# --------------
#   VIII.  GECKO DRIVER  
# --------------

wget https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
tar -x geckodriver -zf geckodriver-v0.30.0-linux64.tar.gz -O > /usr/bin/geckodriver-v0.30.0
chmod +x /usr/bin/geckodriver-v0.30.0
rm geckodriver-v0.30.0-linux64.tar.gz




# --------------
#   VII.  EXTRA  
# --------------


# sudo nginx -t
# systemctl restart nginx
# sudo systemctl restart gunicorn
# sudo systemctl enable gunicorn
# systemctl daemon-reload # ulterior gunicorn conf file changes... 
#
# vim /var/log/nginx/error.log 
# ----------

if [ "$1" = "" ]; then
    echo "Starting...";
    gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &
fi

if [ "$1" = "start" ]; then
    echo "Starting...";
    gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &
fi

if [ "$1" = "stop" ]; then
    echo "Stopping...";
    pkill -f gunicorn
fi

if [ "$1" = "restart" ]; then
    echo "Restarting...";
    pkill -f gunicorn && gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &
fi

if [ "$1" = "status" ]; then
    echo "Status: ";
    ps -eF | grep -i gunicorn
fi



