#!/usr/bin/env bash
# -*- coding: utf8 -*-

# ----------
# SETUP STEPS
# w Deepseek, 62610720, and a few (2?) days prior
# ----------
# w https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu
# 
# ```
# sudo chown -R www-data:www-data /home/myprojectuser/myproject/static/
# sudo chmod -R 755 /home/myprojectuser/myproject/static/
# sudo chmod 755 /home/myprojectuser/
# sudo chmod 755 /home/myprojectuser/myproject/
# ```
#
# ----------
# This was a day(s) long process, finding the solution out in.
# The digitalocean tutorial helped, though not used past the 1st third, and no postgres...
# The above 4 commands comment made finding the final solution possible...  
# ----------



# ------
# NGINX
# ------

# sudo vim /etc/nginx/sites-available/webscraper
# ----------------------------------------------

# server {
#     listen 80;
#     server_name 87.106.66.163;

#     location = /favicon.ico { access_log off; log_not_found off; }
#     location /static/ {
#         root /root/webscraper;
#     }
#     location / {
#         proxy_pass http://127.0.0.1:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }

# sudo ln -s /etc/nginx/sites-available/webscraper /etc/nginx/sites-enabled/
# --------------------------------------------------------------------------


# ---------
# GUNICORN
# ---------

# sudo vim /etc/systemd/system/gunicorn.service
# ---------------------------------------------

# [Unit]
# Description=gunicorn daemon
# After=network.target

# [Service]
# User=root
# Group=root
# WorkingDirectory=/root/webscraper
# ExecStart=/root/webscraper/venv/bin/gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &

# [Install]
# WantedBy=multi-user.target

# django_app.sock ?
# --------------------------------------------
# ExecStart=/root/webscraper/venv/bin/gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info  --bind unix:/root/webscraper/django_app.sock  django_app.wsgi:application
# --------------------------------------------




# sudo nginx -t
# systemctl restart nginx
# sudo systemctl restart gunicorn
# sudo systemctl enable gunicorn
# systemctl daemon-reload # ulterior gunicorn conf file changes... 
#
# vim /var/log/nginx/error.log 
# ----------

if [ "$1" = "" ]; then
    echo "Starting...";
    gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &
fi

if [ "$1" = "start" ]; then
    echo "Starting...";
    gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &
fi

if [ "$1" = "stop" ]; then
    echo "Stopping...";
    pkill -f gunicorn
fi

if [ "$1" = "restart" ]; then
    echo "Restarting...";
    pkill -f gunicorn && gunicorn --workers 3 --access-logfile /var/log/gunicorn/access.log --error-logfile /var/log/gunicorn/error.log --log-level info --bind 127.0.0.1:8000  django_app.wsgi:application &
fi

if [ "$1" = "status" ]; then
    echo "Status: ";
    ps -eF | grep -i gunicorn
fi

